/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package adminAustin;

import Classes.IOMethods;
import Classes.User;
import austincell.TableActionCellEditor;
import austincell.TableActionEvent;
import austincell.tableactioncellrender;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;



import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class Schedulestaffmanagement extends javax.swing.JFrame {

    /**
     * Creates new form Schedule staff management
     */
    private ArrayList<ArrayList<String>>  userList;
    JFrame frame;
    
    public Schedulestaffmanagement() {
        initComponents();
        Admin a = new Admin();
        userList = a.getUserList();
        addrow();
        searchtxt.requestFocus();
        frame = this;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        logoutbtn = new javax.swing.JButton();
        Schedulerbtn1 = new javax.swing.JButton();
        Userbtn = new javax.swing.JButton();
        bookingbtn = new javax.swing.JButton();
        registerbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Stafftbl = new javax.swing.JTable();
        searchtxt = new javax.swing.JTextField();
        searchbtn = new javax.swing.JButton();
        registerbtn1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));
        jPanel1.setForeground(new java.awt.Color(51, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        logoutbtn.setLabel("Log out");
        logoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutbtnActionPerformed(evt);
            }
        });

        Schedulerbtn1.setText("Scheduler ");
        Schedulerbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Schedulerbtn1ActionPerformed(evt);
            }
        });

        Userbtn.setText("User");
        Userbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserbtnActionPerformed(evt);
            }
        });

        bookingbtn.setText("Booking");
        bookingbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addComponent(Userbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Schedulerbtn1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookingbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 543, Short.MAX_VALUE)
                .addComponent(logoutbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Userbtn)
                        .addComponent(bookingbtn)
                        .addComponent(Schedulerbtn1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(logoutbtn)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        registerbtn.setText("Register new scheduler");
        registerbtn.setActionCommand("schedulebtn");
        registerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerbtnActionPerformed(evt);
            }
        });

        Stafftbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "null", "null", "null", "null", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Stafftbl.setRowHeight(40);
        Stafftbl.setSelectionBackground(new java.awt.Color(102, 102, 255));
        jScrollPane1.setViewportView(Stafftbl);

        searchbtn.setText("Search");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });

        registerbtn1.setText("Register new manager");
        registerbtn1.setActionCommand("schedulebtn");
        registerbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerbtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(248, Short.MAX_VALUE)
                .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchbtn)
                .addGap(55, 55, 55))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(registerbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(registerbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerbtn)
                    .addComponent(registerbtn1))
                .addGap(38, 38, 38))
        );

        registerbtn.getAccessibleContext().setAccessibleName("Registerstaffbtn");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutbtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_logoutbtnActionPerformed

    private void deleteRow(int rowIndex) {   
        Admin a = new Admin();
        String UserID = (String) Stafftbl.getValueAt(rowIndex,0);
        a.deleteUser(UserID);
        addrow();
    }
  
        
    private void registerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerbtnActionPerformed
  // TODO add your handling code here:
        Registerscheduler next = new Registerscheduler();
        next.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_registerbtnActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        // TODO add your handling code here:
        if (searchtxt.getText().length() > 0)
        {
            Admin a = new Admin();
            this.userList = a.getUserList();
            Iterator<ArrayList<String>> iterator = userList.iterator();

            while (iterator.hasNext()) 
            {
                ArrayList<String> customer = iterator.next();

                // Remove customers where the 5th element is not "S" or "M
                if (!customer.get(5).equals("S") && !customer.get(5).equals("M") || !customer.get(1).equals(searchtxt.getText())) 
                {
                    iterator.remove(); // Safe removal using the iterator
                } 

            }

            setTable();
        }
        else
        {
            //refreshes the user list (HG Lim)
            JOptionPane.showMessageDialog(null, "Resetting table...");
            addrow();
        }
    }//GEN-LAST:event_searchbtnActionPerformed
    

    private void UserbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserbtnActionPerformed
        // TOD
        usermanagement next = new usermanagement();
        next.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_UserbtnActionPerformed

    private void bookingbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingbtnActionPerformed
        // TODO add your handling code here:
        bookingmanagement next = new bookingmanagement();
        next.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bookingbtnActionPerformed

    private void Schedulerbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Schedulerbtn1ActionPerformed
        // TODO add your handling code here:
        Schedulestaffmanagement next = new Schedulestaffmanagement();
        next.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_Schedulerbtn1ActionPerformed

    private void registerbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerbtn1ActionPerformed
        // TODO add your handling code here:
        Registermanager next = new Registermanager();
        next.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_registerbtn1ActionPerformed
    
   
    
    private void addrow() {


        Admin a = new Admin();
        this.userList = a.getUserList();
        Iterator<ArrayList<String>> iterator = userList.iterator();

        while (iterator.hasNext()) {
            ArrayList<String> customer = iterator.next();

            // Remove customers where the 5th element is not "S" or "M
            if (!customer.get(5).equals("S") && !customer.get(5).equals("M") ) 
            {
                iterator.remove(); // Safe removal using the iterator
            } 
           
        }
       setTable();

       

        
    }
    
    
    public void setTable()
    {
        Object[] columnNames = {"User ID", "Username", "Phone number","Email","Edit"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0); // Create model with column names

        for (List<String> customer : userList) {
            
            String[] newArray = customer.toArray(new String[0]);
            model.addRow(newArray);
        }
        
       Stafftbl.setModel(model);
       TableActionEvent event;
        event = new TableActionEvent(){
            @Override
            public void onEdit(int row) {
                //
                Edituser next = new Edituser();
                Admin a = new Admin();
                
                //create new User Object (HG Lim)
                User selectedUser = new User();
                
                String selectedUserID =(String) Stafftbl.getValueAt(row,0);
                for (ArrayList<String> user: userList)
                {
                    if (user.get(0).equals(selectedUserID))
                    {
                        selectedUser.setuserID(user.get(0));
                        selectedUser.setUsername(user.get(1));
                        selectedUser.setphonenumber(user.get(2));
                        selectedUser.setemail(user.get(3));
                        selectedUser.setpassword(user.get(4));
                        selectedUser.setrole(user.get(5));
                        break;
                        
                    }
                }
                //pass user object to Edit Form
                
                //close form before opening editting instance (HG Lim)
                frame.dispose();
                next.setter(selectedUser);
                next.setVisible(true);
            }
            
            @Override
            public void onDelete(int row) {
                if (Stafftbl.isEditing()){
                    Stafftbl.getCellEditor().stopCellEditing();
                }
                
                //add confirmation message before deleting (HG Lim)
                
                if (JOptionPane.showConfirmDialog(null, "Delete user " + Stafftbl.getValueAt(row, 1) + "?", "Delete user",JOptionPane.WARNING_MESSAGE)==0)
                {
                    deleteRow(row);
                    
                }
            }
            
            @Override
            public void onView(int row) {
                ViewUser next = new ViewUser();
                Admin a = new Admin();
                
                User selectedUser = new User();
                
                String selectedUserID =(String) Stafftbl.getValueAt(row,0);
                for (ArrayList<String> user: userList)
                {
                    if (user.get(0).equals(selectedUserID))
                    {
                        selectedUser.setuserID(user.get(0));
                        selectedUser.setUsername(user.get(1));
                        selectedUser.setphonenumber(user.get(2));
                        selectedUser.setemail(user.get(3));
                        selectedUser.setpassword(user.get(4));
                        
                        if (user.get(5).equals("M"))
                        {
                            selectedUser.setrole("Manager");
                        }
                        else if (user.get(5).equals("S"))
                        {
                            selectedUser.setrole("Scheduler");
                        }
                        
                        break;
                        
                    }
                }
                
                //set main page inactive (HG Lim)
                frame.setEnabled(false);
                next.setter(frame,selectedUser);
                next.setVisible(true);
            }
        };
        Stafftbl.getColumnModel().getColumn(4).setCellRenderer(new tableactioncellrender());
        Stafftbl.getColumnModel().getColumn(4).setCellEditor(new TableActionCellEditor(event));
        
    }
    
    


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Schedulestaffmanagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Schedulestaffmanagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Schedulestaffmanagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Schedulestaffmanagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Schedulestaffmanagement().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Schedulerbtn1;
    private javax.swing.JTable Stafftbl;
    private javax.swing.JButton Userbtn;
    private javax.swing.JButton bookingbtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutbtn;
    private javax.swing.JButton registerbtn;
    private javax.swing.JButton registerbtn1;
    private javax.swing.JButton searchbtn;
    private javax.swing.JTextField searchtxt;
    // End of variables declaration//GEN-END:variables
}
