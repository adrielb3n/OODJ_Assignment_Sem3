/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Scheduler;

import Classes.Hall;
import Classes.IOMethods;
import Classes.Scheduler;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Hg
 */
public class Scheduler_editHall extends javax.swing.JFrame {
    
    private ArrayList<String> hallArray;
    private ArrayList<ArrayList<String>> hallList;
    private String originalName;
    
    //return to previous page after closing window
    private int page;
    private String userID;
    private Hall edittedHall;
    
    
    /**
     * Creates new form Scheduler_addHall
     */
    public Scheduler_editHall() {
        initComponents();

    }
    public Scheduler_editHall(int page,String userID,ArrayList<String> hallArray) {
        initComponents();
       // get userID and tab from main page
       this.page = page;
       this.userID = userID;
       
        Hall hall = new Hall();
        this.hallList = hall.getHallList();
        this.hallArray = hallArray;
        edittedHall = new Hall();
        
        //set object 
        edittedHall.setHallID(hallArray.get(0));
        edittedHall.setHallName(hallArray.get(1));
        edittedHall.setHallType(hallArray.get(2).charAt(0));
        edittedHall.setPricePerHour(Double.parseDouble(hallArray.get(3)));
        edittedHall.setCapacity(Integer.parseInt(hallArray.get(4)));
        edittedHall.setDescription(hallArray.get(5));
        
        //set text fields
        textFieldHallName.setText(hallArray.get(1));
        originalName = hallArray.get(1);
        if (hallArray.get(2).equals("A"))
        {
            hallTypeComboBox.setSelectedIndex(0);
        }
        else if(hallArray.get(2).equals("B"))
        {
            hallTypeComboBox.setSelectedIndex(1);
        }
        else if(hallArray.get(2).equals("C"))
        {
            hallTypeComboBox.setSelectedIndex(2);
        }
        
        FormattedTextFieldPrice.setText(hallArray.get(3));
        
        int capacity = Integer.parseInt(hallArray.get(4));
        
        capacitySpinner.setValue(capacity);
        textAreaDescription.setText(hallArray.get(5));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnDeleteHall = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textFieldHallName = new javax.swing.JTextField();
        hallTypeComboBox = new javax.swing.JComboBox<>();
        FormattedTextFieldPrice = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        btnSaveHall = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaDescription = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        capacitySpinner = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setSize(new java.awt.Dimension(582, 484));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(600, 488));
        jPanel1.setMinimumSize(new java.awt.Dimension(600, 488));

        btnDeleteHall.setBackground(new java.awt.Color(255, 51, 51));
        btnDeleteHall.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDeleteHall.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteHall.setText("Delete");
        btnDeleteHall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteHallActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 286, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 232, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(224, 251, 255));
        jPanel3.setForeground(new java.awt.Color(14, 251, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 75, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Edit Hall Information");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Hall Name");

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Hall Type");

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Rental Price per hour (RM)");

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Description");

        hallTypeComboBox.setBackground(new java.awt.Color(255, 255, 255));
        hallTypeComboBox.setForeground(new java.awt.Color(0, 0, 0));
        hallTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Auditorium", "Banquet Hall", "Conference Room" }));

        FormattedTextFieldPrice.setBackground(new java.awt.Color(255, 255, 255));
        FormattedTextFieldPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        jButton1.setBackground(new java.awt.Color(87, 114, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Upload");

        btnSaveHall.setBackground(new java.awt.Color(87, 114, 255));
        btnSaveHall.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSaveHall.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveHall.setText("Save");
        btnSaveHall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveHallActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Please upload an image");

        btnBack.setBackground(new java.awt.Color(87, 114, 255));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        textAreaDescription.setColumns(1);
        textAreaDescription.setLineWrap(true);
        textAreaDescription.setRows(5);
        textAreaDescription.setMaximumSize(new java.awt.Dimension(232, 84));
        textAreaDescription.setName(""); // NOI18N
        jScrollPane1.setViewportView(textAreaDescription);

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Capacity ");

        capacitySpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(textFieldHallName)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(hallTypeComboBox, 0, 189, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addComponent(FormattedTextFieldPrice)
                        .addComponent(jLabel5)
                        .addComponent(btnSaveHall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeleteHall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1))
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(capacitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnBack))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldHallName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hallTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FormattedTextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(capacitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnSaveHall, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteHall, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteHallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteHallActionPerformed
        // TODO add your handling code here:
        
        ArrayList<ArrayList<String>> bookingList = IOMethods.readFile(IOMethods.BOOKINGTEXT);
        LocalDate today = LocalDate.now();
        
        
        //check if the hall has future reservations 
        boolean futureBookingsExist = false;
        
        for (ArrayList<String> booking : bookingList)
        {
            if (booking.get(1).equals(edittedHall.getHallID()) && (LocalDate.parse(booking.get(3)).isEqual(today) ||LocalDate.parse(booking.get(3)).isAfter(today) ))
            {
                futureBookingsExist = true;
                break;
            }
        }
        
        Scheduler scheduler = new Scheduler();
        String hallName = hallArray.get(1);
        
        
        // if yes, cannot delete 
        if (futureBookingsExist)
        {
            JOptionPane.showMessageDialog(null, "Unable to delete hall.\nThere are upcoming bookings for this hall.");
        }
        else
        {
        //else confirm message before deleting
            if(JOptionPane.showConfirmDialog(null, "Are you sure you want to delete " + hallArray.get(1) + "?","Warning",JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION)
            {
                scheduler.deleteHall(hallArray.get(0));
                JOptionPane.showMessageDialog(null, hallName + " delete successfully.");
                this.dispose();
                new Scheduler_mainPageHardCode(userID, page);
            }
            
        }
        
        //close this frame and open the main frame
    }//GEN-LAST:event_btnDeleteHallActionPerformed

    
    
    
    private void btnSaveHallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveHallActionPerformed
        // TODO add your handling code here:
        Scheduler scheduler = new Scheduler();
        boolean noName = false;
        boolean repeatedName = false;
        boolean multiLines = false;
        boolean priceIsZero = false;

        
        //validate if the textFieldHallName is empty (maximum 3 words)
        //regex pattern: Must start with alphabetical characters, maximum 3 words
        if (textFieldHallName.getText().length() == 0 || !textFieldHallName.getText().matches("^[a-zA-Z']+[ ]?[\\d]*[\\w]*[ ]?[\\d]*[\\w]*$"))
        {
            noName = true;
        }
        
        //catch if price is zero
        if (Double.parseDouble(FormattedTextFieldPrice.getText())<=0)
        {
            priceIsZero=true;
        }
        
       
        //skip if no changes to name, else check for repeated hallname
        if (!textFieldHallName.getText().equals(originalName))
        {
            
            //validate if hallName is repeated
            for (ArrayList<String> row: hallList)
            {
                if (textFieldHallName.getText().equals(row.get(1)))
                {
                    repeatedName = true;
                    break;
                }
            }
        }
        
        if (textAreaDescription.getText().contains("\n"))
        {
            multiLines = true;
        }
        
        /*
        
        some validation code for checking repeating names, empty price textbox
        and empty name textbox :)
        
        */
        if ( !FormattedTextFieldPrice.getText().strip().isEmpty()&&!repeatedName && !noName &&!multiLines&&!priceIsZero)
        {
            
          
            edittedHall.setHallName(textFieldHallName.getText());
            
            String type = (String) hallTypeComboBox.getSelectedItem();
            char zero = type.charAt(0);
            edittedHall.setHallType(zero);
            

            edittedHall.setPricePerHour(Double.parseDouble(FormattedTextFieldPrice.getText()));
            edittedHall.setCapacity(Integer.parseInt(capacitySpinner.getValue().toString()));
            
            if (textAreaDescription.getText().length()==0)
            {
                edittedHall.setDescription("Description yet to be added");
            }
            else
            {
                edittedHall.setDescription(textAreaDescription.getText());
                
            }
            scheduler.editHall(edittedHall.toStringArrayList());
            JOptionPane.showMessageDialog(null, "Hall Edited!");
        }
        else if (FormattedTextFieldPrice.getText().strip().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please fill in price field");
            FormattedTextFieldPrice.grabFocus();
        }
        else if (repeatedName)
        {
            JOptionPane.showMessageDialog(null, textFieldHallName.getText() + " already exist. Please choose another name");
            textFieldHallName.grabFocus();
        }
        else if (noName)
        {
            JOptionPane.showMessageDialog(null, "Please fill in hall name field\nwith appropriate values.\n(Maximum 3 words)");
            textFieldHallName.grabFocus();
        }
        else if (multiLines)
        {
            JOptionPane.showMessageDialog(null, "Please do not insert multiple lines at description");
            textAreaDescription.grabFocus();
        }
        else if (priceIsZero)
        {
            JOptionPane.showMessageDialog(null, "Price per hour cannot be zero.");
            
        }
        
    }//GEN-LAST:event_btnSaveHallActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Scheduler_mainPageHardCode(userID,page);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Scheduler_addHall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Scheduler_addHall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Scheduler_addHall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scheduler_addHall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Scheduler_editHall().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField FormattedTextFieldPrice;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteHall;
    private javax.swing.JButton btnSaveHall;
    private javax.swing.JSpinner capacitySpinner;
    private javax.swing.JComboBox<String> hallTypeComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textAreaDescription;
    private javax.swing.JTextField textFieldHallName;
    // End of variables declaration//GEN-END:variables
}
