/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package customerZD;

import Classes.IOMethods;
import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.components.TimePickerSettings;
import java.time.LocalDate;
import java.time.LocalTime;
import com.github.lgooddatepicker.components.TimePickerSettings.TimeIncrement;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

 
/**
 *
 * @author ZD
 */
public class BookingPage extends javax.swing.JFrame {
    DatePickerSettings dateSettings = new DatePickerSettings();
    Booking booking = new Booking();
    
    private String checkin,checkout,pax,type,remarks,date,hallid,name,hprice,userID,paxCheck;
    JFrame frame;
    /**
     * 
     * Creates new form Booking
     */

    
    public BookingPage(String userID, String hallid,String name,String price,String pax,JFrame frame) {
        //set the available time from today to the next 2 week only
        initComponents();
        System.out.println("booking");
        datePicker.setSettings(dateSettings);
        
        ArrayList<ArrayList<String>> schedule = IOMethods.readFile(IOMethods.SCHEDULETEXT);
        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate startDate = LocalDate.now();
        LocalDate endDate = LocalDate.parse(schedule.get(0).get(1), formatter);
        
        dateSettings.setDateRangeLimits(startDate, endDate);
        //auto input today date
        datePicker.setDate(LocalDate.now().plusDays(1));
        dateSettings.setAllowKeyboardEditing(false);
        this.userID = userID;
        this.hallid = hallid;
        this.name = name;
        this.hprice = price;
        this.paxCheck = pax;
        lblName.setText(this.name);
        this.frame= frame;
        
    }
    
    public String getCheckin() {
        return checkin;
    }

    public String getCheckout() {
        return checkout;
    }

    public String getPax() {
        return pax;
    }

    public String getHallType() {
        return type;
    }

    public String getRemarks() {
        return remarks;
    }

    public String getDate() {
        return date;
    }
    
    public String gethPrice() {
        return hprice;
    }
    
    public String getHallID(){
        return hallid;
    }
    public String getUserID(){
        return userID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtRequest = new javax.swing.JTextField();
        btnBook = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtPax = new javax.swing.JSpinner();
        datePicker = new com.github.lgooddatepicker.components.DatePicker();
        TimePickerSettings outtimeSettings = new TimePickerSettings();

        outtimeSettings.generatePotentialMenuTimes(TimeIncrement.OneHour, LocalTime.of(9,0), LocalTime.of(18,0));
        outtimeSettings.setAllowKeyboardEditing(false);
        outTime = new com.github.lgooddatepicker.components.TimePicker(outtimeSettings);
        TimePickerSettings intimeSettings = new TimePickerSettings();

        intimeSettings.generatePotentialMenuTimes(TimeIncrement.OneHour, LocalTime.of(8,0), LocalTime.of(17,0));
        intimeSettings.setAllowKeyboardEditing(false);
        inTime = new com.github.lgooddatepicker.components.TimePicker(intimeSettings);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblName.setText("Symphony Auditorium ");
        lblName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblName.setForeground(new java.awt.Color(0, 0, 0));

        jLabel2.setText("Pic");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Booking Details");
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));

        jLabel4.setText("Check in");

        jLabel5.setText("Check out");

        jLabel6.setText("Total pax");

        jLabel7.setText("Event Type");

        cmbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Talk Show", "Conferences", "Meeting", "Other" }));
        cmbType.setSelectedIndex(3);
        cmbType.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setText("Remarks");

        txtRequest.setBackground(new java.awt.Color(255, 255, 255));

        btnBook.setBackground(new java.awt.Color(87, 114, 255));
        btnBook.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBook.setForeground(new java.awt.Color(255, 255, 255));
        btnBook.setText("Book Now");
        btnBook.setBorderPainted(false);
        btnBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 0));
        jButton2.setText("X");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Check in (date)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblName)
                                .addGap(87, 187, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addGap(8, 8, 8)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtRequest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBook)
                        .addGap(24, 24, 24))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9)
                            .addComponent(txtPax, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(outTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPax, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBook)
                        .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        // TODO add your handling code here:
        try{
            switch(cmbType.getSelectedIndex()){
                    case 0:
                        type = "TS";
                        break;
                    case 1:
                        type = "C";
                        break;
                    case 2:
                        type = "M";
                        break;
                    case 3:
                        type = "O";
                        break;
                }
            date=datePicker.getDate().toString();
            System.out.println(date);
            checkin=(inTime.getTime().toString());
            checkout=(outTime.getTime().toString());
            pax=(txtPax.getValue().toString());
            
            //default remarks text (HG Lim)
            if (txtRequest.getText().length()==0)
            {
                remarks = "No remarks";
            }
            else
            {
                remarks=(txtRequest.getText());
            }

            //validate all the datetime input
            if (inTime.getTime().isAfter(outTime.getTime())||inTime.getTime().equals(outTime.getTime())){
                JOptionPane.showMessageDialog(null,"Invalid check in/check out time");
            }
            //validate pax (HG Lim)
            else if (Integer.parseInt(pax)>Integer.parseInt(paxCheck) )
            {
                JOptionPane.showMessageDialog(null,"Maximum capacity reached. Please select another hall.");
                
            }
            //validate pax cannot be less than 1 (HG Lim)
            else if (Integer.parseInt(pax)<=0)
            {
                JOptionPane.showMessageDialog(null,"Pax cannot be zero.");
                
            }
            else if (datePicker.getDate().isEqual(LocalDate.now()) && (inTime.getTime().isBefore(LocalTime.now()) || inTime.getTime().equals(LocalTime.now())))
            {
                JOptionPane.showMessageDialog(null,"Its " + LocalTime.now().format(DateTimeFormatter.ofPattern("HH:mm")) + " now.\nPlease select another time.");
                
            }
            else{
                 ArrayList<String> overlapBooking = booking.checkAvailability(this.getHallID(),datePicker.getDate(),inTime.getTime(),outTime.getTime());
                 System.out.println(overlapBooking);
                 if(overlapBooking != null)
                 {
                     JOptionPane.showMessageDialog(null,"Someone Booked in between "+overlapBooking.get(4)+" to "+overlapBooking.get(5));
                 }
                 else
                 {
                    new PaymentDetail(this).setVisible(true);
                    //disable booking frame (HG Lim)
                    this.setEnabled(false);
                 }
            }
            
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Please fill in all required fields.");
        }
//        catch (DateTimeParseException e)S
//        {2024
//            System.out.println("help, cannot parse date time");
//        }
    }//GEN-LAST:event_btnBookActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        
        //enable previous frame (HG Lim)
        frame.setEnabled(true);
        frame.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new BookingPage().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBook;
    private javax.swing.JComboBox<String> cmbType;
    private com.github.lgooddatepicker.components.DatePicker datePicker;
    private com.github.lgooddatepicker.components.TimePicker inTime;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblName;
    private com.github.lgooddatepicker.components.TimePicker outTime;
    private javax.swing.JSpinner txtPax;
    private javax.swing.JTextField txtRequest;
    // End of variables declaration//GEN-END:variables
}
